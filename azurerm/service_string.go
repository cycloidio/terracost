// Code generated by "enumer -type=Service -output=service_string.go -linecomment=true"; DO NOT EDIT.

package azurerm

import (
	"fmt"
	"strings"
)

const _ServiceName = "Azure BastionAzure DNSAzure Database for PostgreSQLNAT GatewayStorageVirtual MachinesVirtual NetworkVPN Gateway"

var _ServiceIndex = [...]uint8{0, 13, 22, 51, 62, 69, 85, 100, 111}

const _ServiceLowerName = "azure bastionazure dnsazure database for postgresqlnat gatewaystoragevirtual machinesvirtual networkvpn gateway"

func (i Service) String() string {
	if i >= Service(len(_ServiceIndex)-1) {
		return fmt.Sprintf("Service(%d)", i)
	}
	return _ServiceName[_ServiceIndex[i]:_ServiceIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ServiceNoOp() {
	var x [1]struct{}
	_ = x[AzureBastion-(0)]
	_ = x[AzureDNS-(1)]
	_ = x[AzureDatabaseForPostgresSQL-(2)]
	_ = x[NATGateway-(3)]
	_ = x[Storage-(4)]
	_ = x[VirtualMachines-(5)]
	_ = x[VirtualNetwork-(6)]
	_ = x[VPNGateway-(7)]
}

var _ServiceValues = []Service{AzureBastion, AzureDNS, AzureDatabaseForPostgresSQL, NATGateway, Storage, VirtualMachines, VirtualNetwork, VPNGateway}

var _ServiceNameToValueMap = map[string]Service{
	_ServiceName[0:13]:         AzureBastion,
	_ServiceLowerName[0:13]:    AzureBastion,
	_ServiceName[13:22]:        AzureDNS,
	_ServiceLowerName[13:22]:   AzureDNS,
	_ServiceName[22:51]:        AzureDatabaseForPostgresSQL,
	_ServiceLowerName[22:51]:   AzureDatabaseForPostgresSQL,
	_ServiceName[51:62]:        NATGateway,
	_ServiceLowerName[51:62]:   NATGateway,
	_ServiceName[62:69]:        Storage,
	_ServiceLowerName[62:69]:   Storage,
	_ServiceName[69:85]:        VirtualMachines,
	_ServiceLowerName[69:85]:   VirtualMachines,
	_ServiceName[85:100]:       VirtualNetwork,
	_ServiceLowerName[85:100]:  VirtualNetwork,
	_ServiceName[100:111]:      VPNGateway,
	_ServiceLowerName[100:111]: VPNGateway,
}

var _ServiceNames = []string{
	_ServiceName[0:13],
	_ServiceName[13:22],
	_ServiceName[22:51],
	_ServiceName[51:62],
	_ServiceName[62:69],
	_ServiceName[69:85],
	_ServiceName[85:100],
	_ServiceName[100:111],
}

// ServiceString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ServiceString(s string) (Service, error) {
	if val, ok := _ServiceNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ServiceNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Service values", s)
}

// ServiceValues returns all values of the enum
func ServiceValues() []Service {
	return _ServiceValues
}

// ServiceStrings returns a slice of all String values of the enum
func ServiceStrings() []string {
	strs := make([]string, len(_ServiceNames))
	copy(strs, _ServiceNames)
	return strs
}

// IsAService returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Service) IsAService() bool {
	for _, v := range _ServiceValues {
		if i == v {
			return true
		}
	}
	return false
}

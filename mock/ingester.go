// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cycloidio/cost-estimation (interfaces: Ingester)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	price "github.com/cycloidio/cost-estimation/price"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Ingester is a mock of Ingester interface
type Ingester struct {
	ctrl     *gomock.Controller
	recorder *IngesterMockRecorder
}

// IngesterMockRecorder is the mock recorder for Ingester
type IngesterMockRecorder struct {
	mock *Ingester
}

// NewIngester creates a new mock instance
func NewIngester(ctrl *gomock.Controller) *Ingester {
	mock := &Ingester{ctrl: ctrl}
	mock.recorder = &IngesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Ingester) EXPECT() *IngesterMockRecorder {
	return m.recorder
}

// Ingest mocks base method
func (m *Ingester) Ingest(arg0 context.Context, arg1 chan<- *price.WithProduct) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ingest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ingest indicates an expected call of Ingest
func (mr *IngesterMockRecorder) Ingest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ingest", reflect.TypeOf((*Ingester)(nil).Ingest), arg0, arg1)
}
